import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class InventoryManagementSystem {
    public static void main(String[]args) {

    private static final String SUPPLY_TABLE = "Supply";
    private static final String DEMAND_TABLE = "Demand_Details";

    private Connection connect() {
        String url = "jdbc:mysql://localhost:3306/inventory";
        String username = "msdarvesh";
        String password = "msd";

        Connection connection = null;
        try {
            connection = DriverManager.getConnection(url, username, password);
        } catch (SQLException e) {
            System.out.println("Error connecting to database.");
            e.printStackTrace();
        }
        return connection;
    }

    public void loadSupplyDetails(String fileName) {
        Connection connection = connect();
        String query = "INSERT INTO " + SUPPLY_TABLE + " VALUES (?, ?, ?, ?)";

        try {
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            BufferedReader csvReader = new BufferedReader(new FileReader(fileName));
            String row;
            while ((row = csvReader.readLine()) != null) {
                String[] data = row.split(",");
                preparedStatement.setString(1, data[0]);
                preparedStatement.setString(2, data[1]);
                preparedStatement.setInt(3, Integer.parseInt(data[2]));
                preparedStatement.setString(4, data[3]);
                preparedStatement.executeUpdate();
            }
            csvReader.close();
        } catch (IOException e) {
            System.out.println("Error reading CSV file.");
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("Error inserting into database.");
            e.printStackTrace();
        }
    }

    public void loadDemandDetails(String fileName) {
        Connection connection = connect();
        String query = "INSERT INTO " + DEMAND_TABLE + " VALUES (?, ?, ?, ?)";

        try {
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            BufferedReader csvReader = new BufferedReader(new FileReader(fileName));
            String row;
            while ((row = csvReader.readLine()) != null) {
                String[] data = row.split(",");
                preparedStatement.setString(1, data[0]);
                preparedStatement.setString(2, data[1]);
                preparedStatement.setInt(3, Integer.parseInt(data[2]));
                preparedStatement.setString(4, data[3]);
                preparedStatement.executeUpdate();
            }
            csvReader.close();
        } catch (IOException e) {
            System.out.println("Error reading CSV file.");
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("Error inserting into database.");
            e.printStackTrace();
        }
    }

    public int getInventoryLevel(String productCode) {
        Connection connection = connect();
        String query = "SELECT SUM(Supply_Quantity) - SUM(Demand_Qty) FROM " + SUPPLY_TABLE + " AS S " +
                        "JOIN " + DEMAND_TABLE + " AS D ON S.Product_code = D.Product_code " +
                        "WHERE S.Product_code = ?";

        int inventoryLevel = 0;
        try {
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, productCode);
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                inventoryLevel = resultSet.getInt(1);
            }
        } catch (SQLException e) {
            System.out.println("Error getting inventory level.");
            e.printStackTrace();
        }
        return inventoryLevel;
    }
}